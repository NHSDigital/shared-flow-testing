{
  "type": "object",
  "properties": {
    "messageID": {
      "type": "string"
    },
    "client": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
        },
        "received_start": {
          "type": "string",
          "pattern": "^\\d+$"
        },
        "received_end": {
          "type": "string",
          "pattern": "^\\d+$"
        },
        "sent_start": {
          "type": "string",
          "pattern": "^(-1)$|^\\d+$"
        },
        "sent_end": {
          "type": "string",
          "pattern": "^(-1)$|^\\d+$"
        },
        "user_agent": {
          "type": "string"
        }
      },
      "required": [
        "ip",
        "received_start",
        "received_end",
        "sent_start",
        "sent_end",
        "user_agent"
      ]
    },
    "request": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object"
        },
        "uri": {
          "type": "string"
        },
        "verb": {
          "type": "string",
          "pattern": "GET|POST|PUT|PATCH"
        },
        "content_type": {
          "type": "string"
        },
        "content_length": {
          "type": "string",
          "pattern": "^\\d+$"
        },
        "content_encoding": {
          "type": "string"
        },
        "requestID": {
          "type": "string"
        },
        "correlationID": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "string",
          "pattern": "^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$"
        },
        "uri_path": {
          "type": "string"
        },
        "uri_params": {
          "type": "string"
        }
      },
      "required": [
        "headers",
        "uri",
        "verb",
        "content_type",
        "content_length",
        "content_encoding",
        "requestID",
        "correlationID",
        "host",
        "port",
        "uri_path",
        "uri_params"
      ]
    },
    "meta": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "pattern": "nhsd-nonprod|nhsd-prod"
        },
        "api_guid": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$"
        },
        "api_spec_guid": {
          "type": "string",
          "pattern": "^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$"
        },
        "product": {
          "type": "string"
        },
        "application": {
          "type": "string"
        },
        "application_name": {
          "type": "string"
        },
        "env": {
          "type": "string"
        },
        "client_id": {
          "type": "string",
          "pattern": "(^[0-9A-Za-z]{32}$)|empty"
        },
        "application_id": {
          "type": "string",
          "pattern": "(^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$)|^$"
        },
        "ASID": {
          "type": "string"
        }
      },
      "required": [
        "organization",
        "api_guid",
        "api_spec_guid",
        "product",
        "application",
        "env",
        "client_id",
        "application_id",
        "ASID"
      ]
    },
    "proxy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        },
        "basepath": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "revision",
        "basepath",
        "suffix"
      ]
    },
    "auth": {
      "type": "object",
      "properties": {
        "meta": {
          "type": "object",
          "properties": {
            "auth_type": {
              "type": "string"
            },
            "grant_type": {
              "type": "string"
            },
            "level": {
              "type": "string"
            },
            "provider": {
              "type": "string"
            }
          },
          "required": [
            "auth_type",
            "grant_type",
            "level",
            "provider"
          ]
        },
        "user": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "string"
            }
          },
          "required": [
            "user_id"
          ]
        },
        "id_token_acr": {
          "type": "string"
        },
        "grant_type": {
          "type": "string"
        },
        "authorization": {
          "type": "string"
        },
        "id_token_subject": {
          "type": "string"
        },
        "id_token_issuer": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "access_token_hash": {
          "type": "string"
        }
      },
      "required": [
        "meta",
        "id_token_acr",
        "grant_type",
        "authorization",
        "id_token_subject",
        "id_token_issuer",
        "scope",
        "access_token_hash"
      ]
    },
    "target": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        },
        "content_length": {
          "type": "string"
        },
        "received_start": {
          "type": "string"
        },
        "received_end": {
          "type": "string"
        },
        "sent_start": {
          "type": "string"
        },
        "sent_end": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      },
      "required": [
        "host",
        "status_code",
        "content_length",
        "received_start",
        "received_end",
        "sent_start",
        "sent_end",
        "port"
      ]
    },
    "error": {
      "type": "object",
      "properties": {
        "is_error": {
          "type": "string"
        },
        "is_policy_error": {
          "type": "string"
        },
        "is_target_error": {
          "type": "string"
        },
        "policy_error_policy_name": {
          "type": "string"
        },
        "policy_error_flow_name": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "status_code": {
          "type": "string"
        },
        "reason_phrase": {
          "type": "string"
        },
        "transport_message": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "is_error",
        "is_policy_error",
        "is_target_error",
        "policy_error_policy_name",
        "policy_error_flow_name",
        "error",
        "content",
        "message",
        "status_code",
        "reason_phrase",
        "transport_message",
        "state"
      ]
    },
    "response": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "object"
        },
        "status_code": {
          "type": "string",
          "pattern": "^[1-5][0-9][0-9]$"
        },
        "content_type": {
          "type": "string"
        },
        "content_length": {
          "type": "string"
        },
        "content_encoding": {
          "type": "string"
        },
        "content_body": {
          "type": "string"
        }
      },
      "required": [
        "headers",
        "status_code",
        "content_type",
        "content_length",
        "content_encoding",
        "content_body"
      ]
    }
  },
  "required": [
    "messageID",
    "client",
    "request",
    "meta",
    "proxy",
    "auth",
    "target",
    "error",
    "response"
  ]
}

